{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","api.ts","components/PeopleTable/PeopleTable.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","App","HomePage","Loader","PersonLink","person","name","sex","handleSelectedPerson","slug","onClick","PersonItem","peopleList","born","died","motherName","fatherName","checkMother","mother","some","human","checkFather","father","find","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","useState","isLoading","setIsLoading","isEmptyPeopleList","setIsEmptyList","setPeopleList","undefined","selectedPerson","setSelectedPerson","isLoadingError","setIsLoadingError","useEffect","getPeopleList","data","length","map","NotFounfPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.851fea3a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={\n        ({ isActive }) => classNames(\n          'navbar-item',\n          { 'has-background-grey-lighter': isActive },\n        )\n      }\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink\n            to=\"/\"\n            text=\"Home\"\n          />\n\n          <PageNavLink\n            to=\"/people\"\n            text=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | undefined,\n  name: string | null,\n  sex: string,\n  handleSelectedPerson: (person: Person | undefined) => void,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person, name, sex, handleSelectedPerson,\n}) => {\n  return (\n    <td>\n      <Link\n        to={`#/people/${person?.slug}`}\n        className={classNames({ 'has-text-danger': sex === 'f' })}\n        onClick={() => {\n          handleSelectedPerson(person);\n        }}\n      >\n        {name}\n      </Link>\n    </td>\n  );\n};\n","import { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person,\n  peopleList: Person[],\n  handleSelectedPerson: (person: Person | undefined) => void,\n};\n\nexport const PersonItem: React.FC<Props> = ({\n  person,\n  peopleList,\n  handleSelectedPerson,\n}) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const checkMother = (mother: string | undefined) => {\n    return peopleList.some(human => human.name === mother);\n  };\n\n  const checkFather = (father: string | undefined) => {\n    return peopleList.some(human => human.name === father);\n  };\n\n  return (\n    <>\n      <PersonLink\n        person={person}\n        name={person.name}\n        sex={person.sex}\n        handleSelectedPerson={handleSelectedPerson}\n      />\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {!motherName && <td>-</td>}\n      {(motherName && checkMother(motherName))\n        && (\n          <PersonLink\n            person={peopleList.find(mother => mother.name === motherName)}\n            name={person.motherName}\n            sex=\"m\"\n            handleSelectedPerson={handleSelectedPerson}\n          />\n        )}\n      {motherName && !checkMother(motherName)\n        && <td>{motherName}</td>}\n      {!fatherName && <td>-</td>}\n      {(fatherName && checkFather(fatherName))\n        && (\n          <PersonLink\n            person={peopleList.find(father => father.name === fatherName)}\n            name={person.fatherName}\n            sex=\"f\"\n            handleSelectedPerson={handleSelectedPerson}\n          />\n        )}\n      {fatherName && !checkFather(fatherName)\n        && <td>{fatherName}</td>}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\n\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\nimport { getPeople } from '../../api';\n\nexport const PeopleTable = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmptyPeopleList, setIsEmptyList] = useState(false);\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [\n    selectedPerson,\n    setSelectedPerson,\n  ] = useState<Person | undefined>(undefined);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  useEffect(() => {\n    const getPeopleList = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getPeople();\n\n        if (!data) {\n          setIsEmptyList(true);\n        }\n\n        setPeopleList(data);\n      } catch {\n        setIsLoadingError(true);\n      } finally {\n        setIsLoading(false);\n        setIsLoadingError(false);\n        setIsEmptyList(false);\n      }\n    };\n\n    getPeopleList();\n  }, []);\n\n  const handleSelectedPerson = (person: Person | undefined) => {\n    setSelectedPerson(person);\n  };\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {isLoadingError\n          && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n        {isEmptyPeopleList\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          {!!peopleList.length && (\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n          )}\n\n          <tbody>\n            {peopleList.map(person => (\n              <tr\n                data-cy=\"person\"\n                key={person.slug}\n                className={classNames({\n                  'has-background-warning':\n                     selectedPerson?.name === person.name,\n                })}\n              >\n                <PersonItem\n                  person={person}\n                  peopleList={peopleList}\n                  handleSelectedPerson={handleSelectedPerson}\n                />\n              </tr>\n            ))}\n          </tbody>\n\n        </table>\n      </div>\n    </div>\n  );\n};\n","export const NotFounfPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { NotFounfPage } from './components/NotFoundPage/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route\n            index\n            element={<HomePage />}\n          />\n          <Route\n            path=\"people\"\n            element={<PeopleTable />}\n          />\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route\n            path=\"*\"\n            element={<NotFounfPage />}\n          />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}